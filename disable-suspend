#!/bin/sh
# disable-sleep.sh — portable suspend disabler
# Works with systemd / OpenRC, doas / sudo, and pipe execution

set -e

# --- Helper to run commands as root safely ---
run_as_root() {
    if [ "$(id -u)" -eq 0 ]; then
        "$@"
    elif command -v doas >/dev/null 2>&1; then
        doas "$@"
    elif command -v sudo >/dev/null 2>&1; then
        sudo "$@"
    else
        echo "❌ Need root privileges (install doas or sudo)"
        exit 1
    fi
}

echo "🔍 Detecting init system..."
INIT_SYSTEM="unknown"

if command -v systemctl >/dev/null 2>&1 && pidof systemd >/dev/null 2>&1; then
    INIT_SYSTEM="systemd"
elif command -v rc-service >/dev/null 2>&1; then
    INIT_SYSTEM="openrc"
else
    INIT_EXE=$(readlink -f /proc/1/exe 2>/dev/null || true)
    case "$INIT_EXE" in
        *systemd*) INIT_SYSTEM="systemd" ;;
        *openrc*) INIT_SYSTEM="openrc" ;;
    esac
fi

case "$INIT_SYSTEM" in
    systemd)
        echo "→ Detected systemd"
        run_as_root systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
        echo "✅ Systemd sleep disabled."
        ;;
    openrc)
        echo "→ Detected OpenRC (e.g. Alpine)"
        if rc-service --exists acpid >/dev/null 2>&1; then
            echo "Stopping and disabling acpid..."
            run_as_root rc-service acpid stop || true
            run_as_root rc-update del acpid || true
        fi

        echo "Disabling CPU idle states..."
        for s in /sys/devices/system/cpu/cpuidle/state*/disable; do
            if [ -w "$s" ]; then
                run_as_root sh -c "echo 1 > $s"
            fi
        done

        echo "Persisting via /etc/local.d..."
        run_as_root sh -c 'mkdir -p /etc/local.d && cat >/etc/local.d/nosleep.start <<EOF
#!/bin/sh
for s in /sys/devices/system/cpu/cpuidle/state*/disable; do
    [ -w "\$s" ] && echo 1 > "\$s"
done
EOF
chmod +x /etc/local.d/nosleep.start
rc-update add local default >/dev/null 2>&1 || true
'
        echo "✅ OpenRC sleep disabled."
        ;;
    *)
        echo "⚠️ Unknown init system. Please disable suspend manually."
        exit 1
        ;;
esac

echo "🎉 Done — suspend disabled."
