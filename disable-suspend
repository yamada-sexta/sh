#!/bin/sh
# disable-sleep.sh — disable system suspend/sleep across different init systems
# Works with: systemd, OpenRC (Alpine), doas/sudo/root
set -e

# --- Elevate privileges if not root ---
if [ "$(id -u)" -ne 0 ]; then
    echo "⚙️  Root privileges required. Trying to elevate..."
    if command -v doas >/dev/null 2>&1; then
        exec doas "$0" "$@"
    elif command -v sudo >/dev/null 2>&1; then
        exec sudo "$0" "$@"
    else
        echo "❌ Neither 'doas' nor 'sudo' found. Please run as root."
        exit 1
    fi
fi

# --- Detect init system ---
echo "🔍 Detecting init system..."
INIT_SYSTEM="unknown"

if command -v systemctl >/dev/null 2>&1 && pidof systemd >/dev/null 2>&1; then
    INIT_SYSTEM="systemd"
elif command -v rc-service >/dev/null 2>&1; then
    INIT_SYSTEM="openrc"
else
    INIT_EXE=$(readlink -f /proc/1/exe 2>/dev/null || true)
    case "$INIT_EXE" in
        *systemd*) INIT_SYSTEM="systemd" ;;
        *openrc*) INIT_SYSTEM="openrc" ;;
    esac
fi

# --- Disable sleep based on init system ---
case "$INIT_SYSTEM" in
    systemd)
        echo "→ Detected systemd"
        echo "Masking suspend/hibernate targets..."
        systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
        echo "✅ Systemd sleep/hibernate disabled."
        ;;
    openrc)
        echo "→ Detected OpenRC (e.g. Alpine Linux)"
        if rc-service --exists acpid; then
            echo "Stopping and disabling acpid..."
            rc-service acpid stop || true
            rc-update del acpid || true
        fi

        echo "Disabling CPU idle states..."
        for s in /sys/devices/system/cpu/cpuidle/state*/disable; do
            [ -w "$s" ] && echo 1 > "$s"
        done

        echo "Persisting settings via /etc/local.d..."
        mkdir -p /etc/local.d
        cat >/etc/local.d/nosleep.start <<'EOF'
#!/bin/sh
for s in /sys/devices/system/cpu/cpuidle/state*/disable; do
    [ -w "$s" ] && echo 1 > "$s"
done
EOF
        chmod +x /etc/local.d/nosleep.start
        rc-update add local default

        echo "✅ OpenRC sleep/ACPI disabled."
        ;;
    *)
        echo "⚠️ Unknown init system. Please disable suspend manually."
        exit 1
        ;;
esac

echo "🎉 Done — sleep and suspend disabled."
